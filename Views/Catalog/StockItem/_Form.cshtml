@using Develover.WebUI.Entities;
@using Develover.WebUI.Extensions;

@model StockItem

@{
    List<SelectListItem> locations = (List<SelectListItem>)ViewData["Locations"];
    List<SelectListItem> unitOfMeasures = (List<SelectListItem>)ViewData["UnitOfMeasures"];
}

<form id="form-stock-item" class="form">
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.Id)
    <div class="form-group row">
        @Html.LabelFor(m => m.Name, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm text-sm-right" })
        <div class="field-group col-sm-10">
            @Html.TextBoxFor(m => m.Name, htmlAttributes: new { @class = "form-control form-control-sm" })
            <div class="invalid-feedback"></div>
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(m => m.UnitOfMeasureId, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm text-sm-right" })
        <div class="field-group col-sm-4">
            @Html.SelectPickerFor(m => m.UnitOfMeasureId, new { selectSize = "", target = "modal-unit-of-measure", postbackClass = "postback-unit-of-measure" }, unitOfMeasures)
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(m => m.DefaultLocationId, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm text-sm-right" })
        <div class="field-group col-sm-4">
            @Html.SelectPickerFor(m => m.DefaultLocationId, new { selectSize = "", target = "modal-location", postbackClass = "postback-default-location" }, locations)
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(m => m.Note, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm text-sm-right" })
        <div class="field-group col-sm-10">
            @Html.TextAreaFor(m => m.Note, htmlAttributes: new { @class = "form-control form-control-sm", @rows = 3 })
            <div class="invalid-feedback"></div>
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(m => m.Status, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm text-sm-right" })
        <div class="field-group col-sm-10">
            @Html.CheckBoxFor(m => m.Status, htmlAttributes: new { @class = "form-control-sm" })
            <div class="invalid-feedback"></div>
        </div>
    </div>
</form>