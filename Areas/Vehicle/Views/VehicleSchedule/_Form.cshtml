@using Develover.WebUI.Entities;
@using Develover.WebUI.Extensions;

@model VehicleSchedule

@{
    List<SelectListItem> vehicles = (List<SelectListItem>)ViewData["Vehicles"];
    List<SelectListItem> employees = (List<SelectListItem>)ViewData["Employees"];
    List<SelectListItem> departments = (List<SelectListItem>)ViewData["Departments"];
    List<SelectListItem> vehicleUsePurposes = (List<SelectListItem>)ViewData["VehicleUsePurposes"];
}

<form id="form-vehicle-schedule" class="form">
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.Id)
    <div class="form-group row">
        @Html.LabelFor(m => m.IssueDate, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm text-sm-right" })
        <div class="field-group col-sm-4">
            @Html.TextBoxFor(m => m.IssueDate, htmlAttributes: new { @class = "form-control form-control-sm datepicker text-center" })
            <div class="invalid-feedback"></div>
        </div>
        @Html.LabelFor(m => m.No, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm text-sm-right" })
        <div class="field-group col-sm-4">
            @Html.TextBoxFor(m => m.No, htmlAttributes: new { @class = "form-control form-control-sm text-center" })
            <div class="invalid-feedback"></div>
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(m => m.DepartureDate, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm text-sm-right" })
        <div class="field-group col-sm-4">
            @Html.TextBoxFor(m => m.DepartureDate, htmlAttributes: new { @class = "form-control form-control-sm datetimepicker text-center" })
            <div class="invalid-feedback"></div>
        </div>
        @Html.LabelFor(m => m.ReturnDate, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm text-sm-right" })
        <div class="field-group col-sm-4">
            @Html.TextBoxFor(m => m.ReturnDate, htmlAttributes: new { @class = "form-control form-control-sm datetimepicker text-center" })
            <div class="invalid-feedback"></div>
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(m => m.VehicleId, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm text-sm-right" })
        <div class="field-group col-sm-4">
            @Html.SelectPickerFor(m => m.VehicleId, new { selectSize = "", target = "modal-vehicle", postbackClass = "postback-vehicle" }, vehicles)
        </div>
        @Html.LabelFor(m => m.DriverId, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm text-sm-right" })
        <div class="field-group col-sm-4">
            @Html.SelectPickerFor(m => m.DriverId, new { selectSize = "", target = "modal-employee", postbackClass = "postback-employee" }, employees)
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(m => m.PetitionerId, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm text-sm-right" })
        <div class="field-group col-sm-4">
            @Html.SelectPickerFor(m => m.PetitionerId, employees)
        </div>
        @Html.LabelFor(m => m.DepartmentId, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm text-sm-right" })
        <div class="field-group col-sm-4">
            @Html.SelectPickerFor(m => m.DepartmentId, departments)
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(m => m.Origin, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm text-sm-right" })
        <div class="field-group col-sm-4">
            @Html.TextAreaFor(m => m.Origin, htmlAttributes: new { @class = "form-control form-control-sm", @rows = 3 })
            <div class="invalid-feedback"></div>
        </div>
        @Html.LabelFor(m => m.Destination, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm text-sm-right" })
        <div class="field-group col-sm-4">
            @Html.TextAreaFor(m => m.Destination, htmlAttributes: new { @class = "form-control form-control-sm", @rows = 3 })
            <div class="invalid-feedback"></div>
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(m => m.VehicleUsePurposeId, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm text-sm-right" })
        <div class="field-group col-sm-4">
            @Html.SelectPickerFor(m => m.VehicleUsePurposeId, new { selectSize = "", target = "modal-vehicle-use-purpose", postbackClass = "postback-vehicle-use-purpose" }, vehicleUsePurposes)
        </div>
        @Html.LabelFor(m => m.Complete, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm text-sm-right" })
        <div class="field-group col-sm-4">
            @Html.CheckBoxFor(m => m.Complete, htmlAttributes: new { @class = "form-control-sm" })
            <div class="invalid-feedback"></div>
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(m => m.Note, "Note", htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm text-sm-right" })
        <div class="field-group col-sm-10">
            @Html.TextAreaFor(m => m.Note, htmlAttributes: new { @class = "form-control form-control-sm" })
            <div class="invalid-feedback"></div>
        </div>
    </div>

    <div class="detail-info">
        <div id="toolbar-vehicle-schedule-details">
            @Html.AddItem("modal-add-detail")
        </div>
        <table id="table-vehicle-schedule-details"
               data-toolbar="#toolbar-vehicle-schedule-details"
               data-cookie="true"
               data-cookie-id-table="cookie-vehicle-schedule-details"
               data-id-field="id"
               data-pagination="true"
               data-show-footer="true"
               data-sortable="true"
               data-sort-name="sequenceNo"
               data-sort-order="asc"
               data-mobile-responsive="true">
        </table>
    </div>
</form>

@await Html.PartialAsync($"~/Areas/Vehicle/Views/VehicleSchedule/_AddItem.cshtml", new VehicleScheduleItem() { IssueDate = DateTime.Now })

@await Html.PartialAsync($"~/Views/Catalog/Vehicle/_Modal.cshtml", new Vehicle { Id = Guid.NewGuid(), Status = true })
@await Html.PartialAsync($"~/Views/Catalog/VehicleUsePurpose/_Modal.cshtml", new VehicleUsePurpose { Id = Guid.NewGuid(), Status = true })