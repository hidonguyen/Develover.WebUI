@using Develover.WebUI.Entities;
@using Develover.WebUI.Extensions;

@model VehicleSchedule

@{
    List<SelectListItem> employees = (List<SelectListItem>)ViewData["Employees"];
    List<SelectListItem> departments = (List<SelectListItem>)ViewData["Departments"];
    List<SelectListItem> vehicleUsePurposes = (List<SelectListItem>)ViewData["VehicleUsePurposes"];
}

<div class="modal fade" id="modal-scheduled" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" aria-labelledby="Scheduled" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Schedule</h5>
                <button type="button" class="close" onclick="vehicleInfo.hideModalScheduled();" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="modal-scheduled-form" class="form">
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.Id)
                    <div class="form-group row">
                        @Html.LabelFor(m => m.DepartureDate, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm text-sm-right" })
                        <div class="field-group col-sm-4">
                            @Html.TextBoxFor(m => m.DepartureDate, htmlAttributes: new { @class = "form-control form-control-sm datetimepicker" })
                        </div>
                        @Html.LabelFor(m => m.ReturnDate, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm text-sm-right" })
                        <div class="field-group col-sm-4">
                            @Html.TextBoxFor(m => m.ReturnDate, htmlAttributes: new { @class = "form-control form-control-sm datetimepicker" })
                        </div>
                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(m => m.DriverId, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm text-sm-right" })
                        <div class="field-group col-sm-4">
                            @Html.SelectPickerFor(m => m.DriverId, employees)
                        </div>
                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(m => m.PetitionerId, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm text-sm-right" })
                        <div class="field-group col-sm-4">
                            @Html.SelectPickerFor(m => m.PetitionerId, employees)
                        </div>
                        @Html.LabelFor(m => m.DepartmentId, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm text-sm-right" })
                        <div class="field-group col-sm-4">
                            @Html.SelectPickerFor(m => m.DepartmentId, departments)
                        </div>
                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(m => m.VehicleUsePurposeId, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm text-sm-right" })
                        <div class="field-group col-sm-10">
                            @Html.SelectPickerFor(m => m.VehicleUsePurposeId, vehicleUsePurposes)
                        </div>
                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(m => m.Destination, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm text-sm-right" })
                        <div class="field-group col-sm-10">
                            @Html.TextAreaFor(m => m.Destination, htmlAttributes: new { @class = "form-control form-control-sm", @rows = 3 })
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" onclick="vehicleInfo.hideModalScheduled();">Close</button>
                <button type="button" class="btn btn-primary save" onclick="vehicleInfo.UpdateStatusScheduled();">Scheduled</button>
            </div>
        </div>
    </div>
</div>