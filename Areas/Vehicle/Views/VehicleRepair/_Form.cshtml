@using Develover.WebUI.Entities;
@using Develover.WebUI.Extensions;

@model VehicleRepair

@{
    List<SelectListItem> vehicles = (List<SelectListItem>)ViewData["Vehicles"];
    List<SelectListItem> employees = (List<SelectListItem>)ViewData["Employees"];
}

<form id="form-vehicle-repair" class="form">
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.Id)
    <div class="form-group row">
        @Html.LabelFor(m => m.IssueDate, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm text-sm-right" })
        <div class="field-group col-sm-3">
            @Html.TextBoxFor(m => m.IssueDate, htmlAttributes: new { @class = "form-control form-control-sm datepicker" })
            <div class="invalid-feedback"></div>
        </div>
        @Html.LabelFor(m => m.No, htmlAttributes: new { @class = "col-sm-3 col-form-label col-form-label-sm text-sm-right" })
        <div class="field-group col-sm-3">
            @Html.TextBoxFor(m => m.No, htmlAttributes: new { @class = "form-control form-control-sm" })
            <div class="invalid-feedback"></div>
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(m => m.VehicleId, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm text-sm-right" })
        <div class="field-group col-sm-3">
            @Html.SelectPickerFor(m => m.VehicleId, new { selectSize = "", target = "modal-vehicle", postbackClass = "postback-vehicle" }, vehicles)
        </div>
        @Html.LabelFor(m => m.DriverId, htmlAttributes: new { @class = "col-sm-3 col-form-label col-form-label-sm text-sm-right" })
        <div class="field-group col-sm-3">
            @Html.SelectPickerFor(m => m.DriverId, employees)
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(m => m.RepairShop, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm text-sm-right" })
        <div class="field-group col-sm-3">
            @Html.TextBoxFor(m => m.RepairShop, htmlAttributes: new { @class = "form-control form-control-sm" })
            <div class="invalid-feedback"></div>
        </div>
        @Html.LabelFor(m => m.EstimatedCompletionDate, htmlAttributes: new { @class = "col-sm-3 col-form-label col-form-label-sm text-sm-right" })
        <div class="field-group col-sm-3">
            @Html.TextBoxFor(m => m.EstimatedCompletionDate, htmlAttributes: new { @class = "form-control form-control-sm datetimepicker" })
            <div class="invalid-feedback"></div>
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(m => m.EstimatedRepairCost, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm text-sm-right" })
        <div class="field-group col-sm-3">
            @Html.TextBoxFor(m => m.EstimatedRepairCost, htmlAttributes: new { @class = "form-control form-control-sm text-sm-right" })
            <div class="invalid-feedback"></div>
        </div> 
        @Html.LabelFor(m => m.Complete, htmlAttributes: new { @class = "col-sm-3 col-form-label col-form-label-sm text-sm-right" })
        <div class="field-group col-sm-4">
            @Html.CheckBoxFor(m => m.Complete, htmlAttributes: new { @class = "form-control-sm" })
            <div class="invalid-feedback"></div>
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(m => m.Note, "Note", htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm text-sm-right" })
        <div class="field-group col-sm-10">
            @Html.TextAreaFor(m => m.Note, htmlAttributes: new { @class = "form-control form-control-sm" })
            <div class="invalid-feedback"></div>
        </div>
    </div>

    <div class="detail-info">
        <div id="toolbar-vehicle-repair-details">
            @Html.AddItem("modal-add-detail")
        </div>
        <table id="table-vehicle-repair-details"
               data-toolbar="#toolbar-vehicle-repair-details"
               data-cookie="true"
               data-cookie-id-table="cookie-vehicle-repair-details"
               data-id-field="id"
               data-pagination="true"
               data-show-footer="true"
               data-sortable="true"
               data-sort-name="sequenceNo"
               data-sort-order="asc"
               data-mobile-responsive="true">
        </table>
    </div>
</form>

@await Html.PartialAsync($"~/Areas/Vehicle/Views/VehicleRepair/_AddItem.cshtml", new VehicleRepairItem())

@await Html.PartialAsync($"~/Views/Catalog/Vehicle/_Modal.cshtml", new Vehicle { Id = Guid.NewGuid(), Status = true })