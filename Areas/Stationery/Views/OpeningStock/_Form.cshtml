@using Develover.WebUI.Entities;
@using Develover.WebUI.Extensions;

@model OpeningStock


<form id="form-opening-stock" class="form">
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.Id)
    <div class="form-group row">
        @Html.LabelFor(m => m.DateUpdate, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm text-sm-right" })
        <div class="field-group col-sm-2">
            @Html.TextBoxFor(m => m.DateUpdate, htmlAttributes: new { @class = "form-control form-control-sm text-center datepicker" })
            <div class="invalid-feedback"></div>
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(m => m.Note, htmlAttributes: new { @class = "col-sm-2 col-form-label col-form-label-sm text-sm-right" })
        <div class="field-group col-sm-10">
            @Html.TextAreaFor(m => m.Note, htmlAttributes: new { @class = "summernote form-control form-control-sm" })
            <div class="invalid-feedback"></div>
        </div>
    </div>


    <div class="detail-info">
        <div id="toolbar-opening-stock-details">
            @Html.AddItem("modal-add-detail")
        </div>
        <table id="table-opening-stock-details"
               data-toolbar="#toolbar-opening-stock-details"
               data-cookie="true"
               data-cookie-id-table="cookie-opening-stock-details"
               data-id-field="id"
               data-pagination="true"
               data-show-footer="true"
               data-sortable="true"
               data-mobile-responsive="true">
        </table>
    </div>
</form>

@await Html.PartialAsync($"~/Areas/Stationery/Views/OpeningStock/_AddItem.cshtml", new OpeningStockItem())

@await Html.PartialAsync($"~/Views/Catalog/StockItem/_Modal.cshtml", new StockItem { Id = Guid.NewGuid(), Status = true })

@await Html.PartialAsync($"~/Views/Catalog/UnitOfMeasure/_Modal.cshtml", new UnitOfMeasure { Id = Guid.NewGuid(), Status = true })
@await Html.PartialAsync($"~/Views/Catalog/Location/_Modal.cshtml", new Location { Id = Guid.NewGuid(), Status = true })